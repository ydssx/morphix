# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from api.payment.v1 import payment_pb2 as api_dot_payment_dot_v1_dot_payment__pb2


class PaymentServiceStub(object):
    """定义支付服务接口
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.MakePayment = channel.unary_unary(
                '/paymentv1.PaymentService/MakePayment',
                request_serializer=api_dot_payment_dot_v1_dot_payment__pb2.MakePaymentRequest.SerializeToString,
                response_deserializer=api_dot_payment_dot_v1_dot_payment__pb2.PaymentResponse.FromString,
                )
        self.GetPayment = channel.unary_unary(
                '/paymentv1.PaymentService/GetPayment',
                request_serializer=api_dot_payment_dot_v1_dot_payment__pb2.GetPaymentRequest.SerializeToString,
                response_deserializer=api_dot_payment_dot_v1_dot_payment__pb2.GetPaymentResponse.FromString,
                )
        self.CancelPayment = channel.unary_unary(
                '/paymentv1.PaymentService/CancelPayment',
                request_serializer=api_dot_payment_dot_v1_dot_payment__pb2.CancelPaymentRequest.SerializeToString,
                response_deserializer=api_dot_payment_dot_v1_dot_payment__pb2.CancelPaymentResponse.FromString,
                )
        self.Refund = channel.unary_unary(
                '/paymentv1.PaymentService/Refund',
                request_serializer=api_dot_payment_dot_v1_dot_payment__pb2.RefundRequest.SerializeToString,
                response_deserializer=api_dot_payment_dot_v1_dot_payment__pb2.RefundResponse.FromString,
                )


class PaymentServiceServicer(object):
    """定义支付服务接口
    """

    def MakePayment(self, request, context):
        """发起支付
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPayment(self, request, context):
        """查询支付状态
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelPayment(self, request, context):
        """取消支付
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Refund(self, request, context):
        """退款
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PaymentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'MakePayment': grpc.unary_unary_rpc_method_handler(
                    servicer.MakePayment,
                    request_deserializer=api_dot_payment_dot_v1_dot_payment__pb2.MakePaymentRequest.FromString,
                    response_serializer=api_dot_payment_dot_v1_dot_payment__pb2.PaymentResponse.SerializeToString,
            ),
            'GetPayment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPayment,
                    request_deserializer=api_dot_payment_dot_v1_dot_payment__pb2.GetPaymentRequest.FromString,
                    response_serializer=api_dot_payment_dot_v1_dot_payment__pb2.GetPaymentResponse.SerializeToString,
            ),
            'CancelPayment': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelPayment,
                    request_deserializer=api_dot_payment_dot_v1_dot_payment__pb2.CancelPaymentRequest.FromString,
                    response_serializer=api_dot_payment_dot_v1_dot_payment__pb2.CancelPaymentResponse.SerializeToString,
            ),
            'Refund': grpc.unary_unary_rpc_method_handler(
                    servicer.Refund,
                    request_deserializer=api_dot_payment_dot_v1_dot_payment__pb2.RefundRequest.FromString,
                    response_serializer=api_dot_payment_dot_v1_dot_payment__pb2.RefundResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'paymentv1.PaymentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PaymentService(object):
    """定义支付服务接口
    """

    @staticmethod
    def MakePayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/paymentv1.PaymentService/MakePayment',
            api_dot_payment_dot_v1_dot_payment__pb2.MakePaymentRequest.SerializeToString,
            api_dot_payment_dot_v1_dot_payment__pb2.PaymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/paymentv1.PaymentService/GetPayment',
            api_dot_payment_dot_v1_dot_payment__pb2.GetPaymentRequest.SerializeToString,
            api_dot_payment_dot_v1_dot_payment__pb2.GetPaymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelPayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/paymentv1.PaymentService/CancelPayment',
            api_dot_payment_dot_v1_dot_payment__pb2.CancelPaymentRequest.SerializeToString,
            api_dot_payment_dot_v1_dot_payment__pb2.CancelPaymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Refund(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/paymentv1.PaymentService/Refund',
            api_dot_payment_dot_v1_dot_payment__pb2.RefundRequest.SerializeToString,
            api_dot_payment_dot_v1_dot_payment__pb2.RefundResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
