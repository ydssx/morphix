version: '3.9'
x-default-logging:
  &logging
  driver: loki
  options:
    loki-url: "http://loki:3100/loki/api/v1/push"
    max-size: "5m"
    max-file: "2"

services:

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    restart: always
    command:
      - "--prometheus.server-url"
      - "http://prometheus:9090"
      - --prometheus.query.support-spanmetrics-connector=true
    ports:
      # - "5775:5775/udp"
      # - "6831:6831/udp"
      # - "6832:6832/udp"
      # - "5778:5778"
      - "16686:16686"
      - "16685:16685"
      # - "14268:14268"
      # - "4318:4318"
      - "4317"
      - "14250"
      - "14268"
      # - "9411:9411"
    environment:
      # - SPAN_STORAGE_TYPE=elasticsearch
      # - ES_SERVER_URLS=http://elasticsearch:9200
      - LOG_LEVEL=debug
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_QUERY_SUPPORT_SPANMETRICS_CONNECTOR=true
      - COLLECTOR_OTLP_ENABLED=true
    # logging: *logging
    depends_on:
      - prometheus
    networks:
      - morphix_net
    deploy:
      resources:
        limits:
          memory: 200M

  # OpenTelemetry Collector
  otelcol:
    image: otel/opentelemetry-collector-contrib:0.76.1
    container_name: otel-col
    deploy:
      resources:
        limits:
          memory: 125M
    restart: unless-stopped
    command:
      [
        "--config=/etc/otelcol-config.yml",
        "--config=/etc/otelcol-config-extras.yml"
      ]
    volumes:
      - ./deploy/otelcollector/otelcol-config.yml:/etc/otelcol-config.yml
      - ./deploy/otelcollector/otelcol-config-extras.yml:/etc/otelcol-config-extras.yml
    ports:
      - "4317:4317" # OTLP over gRPC receiver
      - "4318:4318" # OTLP over HTTP receiver
      - "9464:9464" # Prometheus exporter
      - "8888:8888" # metrics endpoint
      - "8889:8889"
    depends_on:
      - jaeger
    networks:
      - morphix_net
    # logging: *logging

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
    ports:
      - 9090:9090
    volumes:
      - ./deploy/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus/data:/prometheus
    networks:
      - morphix_net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    user: root
    environment:
      # 时区上海 - Time zone Shanghai (Change if needed)
      TZ: Asia/Shanghai
    restart: always
    volumes:
      - ./data/grafana/data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - morphix_net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
    container_name: elasticsearch
    user: root
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - TZ=Asia/Shanghai
    volumes:
      - ./data/elasticsearch/data:/usr/share/elasticsearch/data
    # restart: always
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - morphix_net

  etcd:
    image: bitnami/etcd:latest
    container_name: etcd
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    ports:
      - 2377:2379
      - 2378:2380
    networks:
      - morphix_net

  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: morphix
    volumes:
      - ./data/mysql/data:/var/lib/mysql
    networks:
      - morphix_net

  loki:
    image: grafana/loki:latest
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - 3100:3100
    volumes:
      - ./deploy/loki/loki-config.yml:/etc/loki/loki-config.yml
    networks:
      - morphix_net

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./deploy/loki/promtail-config.yaml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers
    command: -config.file=/etc/promtail/config.yml
    networks:
      - morphix_net

  gateway:
    image: registry.cn-shenzhen.aliyuncs.com/ydssx/gateway:${TAG:-latest}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gateway.rule=Host(`www.example.com`)"
    container_name: gateway-service
    volumes:
      - ./configs:/etc/morphix
    build:
      context: ./
      dockerfile: ./app/gateway/Dockerfile
      args:
        - TAG=${TAG:-latest}
    # ports:
    #   - 8000:8000
    depends_on:
      - etcd
      - jaeger
      - user
    networks:
      - morphix_net
    # logging: *logging

  user:
    image: registry.cn-shenzhen.aliyuncs.com/ydssx/user:${TAG:-latest}
    container_name: user-service
    volumes:
      - ./configs:/etc/morphix
    build:
      context: ./
      dockerfile: ./app/user/Dockerfile
      args:
        - TAG=${TAG:-latest}
    depends_on:
      - etcd
      - jaeger
      - sms
    networks:
      - morphix_net

  sms:
    image: registry.cn-shenzhen.aliyuncs.com/ydssx/sms:${TAG:-latest}
    container_name: sms-service
    volumes:
      - ./configs/:/etc/morphix/:ro
    build:
      context: ./
      dockerfile: ./app/sms/Dockerfile
      args:
        - TAG=${TAG:-latest}
    depends_on:
      - etcd
      - jaeger
    networks:
      - morphix_net
  order:
    image: registry.cn-shenzhen.aliyuncs.com/ydssx/order:${TAG:-latest}
    container_name: order-service
    volumes:
      - ./configs/:/etc/morphix/:ro
    build:
      context: ./
      dockerfile: ./app/order/Dockerfile
      args:
        - TAG=${TAG:-latest}
    depends_on:
      - etcd
      - jaeger
    networks:
      - morphix_net
  payment:
    image: registry.cn-shenzhen.aliyuncs.com/ydssx/payment:${TAG:-latest}
    container_name: paymnet-service
    volumes:
      - ./configs/:/etc/morphix/:ro
    build:
      context: ./
      dockerfile: ./app/payment/Dockerfile
      args:
        - TAG=${TAG:-latest}
    depends_on:
      - etcd
      - jaeger
    networks:
      - morphix_net

  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8080:80
    networks:
      - morphix_net

  traefik:
    # The official v2 Traefik docker image
    image: traefik:v2.10
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "8088:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8089:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - morphix_net

  nats:
    container_name: nats
    image: nats:latest
    command: ["--js"]
    ports:
      - "4222:4222"
      - "8223:8222"
      - "6222:6222"
    networks:
      - morphix_net

networks:
  morphix_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
