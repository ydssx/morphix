// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/ydssx/morphix/app/job/internal/common"
	"github.com/ydssx/morphix/app/job/internal/server"
	"github.com/ydssx/morphix/app/job/internal/service"
	common2 "github.com/ydssx/morphix/common"
	"github.com/ydssx/morphix/common/conf"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

func wireApp(bootstrap *conf.Bootstrap) (*kratos.App, func(), error) {
	serviceClientSet := common.NewServiceClientSet(bootstrap)
	jobServer := server.NewJobServer(bootstrap, serviceClientSet)
	client := common.NewAsynqClient(bootstrap)
	inspector := common.NewAsynqInspector(bootstrap)
	jobService := service.NewJobService(client, inspector)
	grpcServer := server.NewGRPCServer(bootstrap, jobService)
	conn, cleanup, err := common2.NewNatsConn(bootstrap)
	if err != nil {
		return nil, nil, err
	}
	cloudEvent := common2.NewCloudEvent(conn)
	listenerServer := server.NewListenerServer(cloudEvent, serviceClientSet)
	app := newApp(jobServer, grpcServer, listenerServer, bootstrap)
	return app, func() {
		cleanup()
	}, nil
}
